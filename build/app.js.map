{"version":3,"sources":["../server/app.js"],"names":["app","use","bodyParser","json","urlencoded","extended","meetupRoutes","questionsRoute"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;AAIA;;AACA;;;;AATA;;AACA;AAKA;AACA,IAAMA,GAAG,GAAG,uBAAZ;AAIA;AACAA,GAAG,CAACC,GAAJ,CAAQ,qBAAO,KAAP,CAAR,E,CAGA;;AACAD,GAAG,CAACC,GAAJ,CAAQC,oBAAWC,IAAX,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,oBAAWE,UAAX,CAAsB;AAC5BC,EAAAA,QAAQ,EAAE;AADkB,CAAtB,CAAR;AAKAL,GAAG,CAACC,GAAJ,CAAQ,iBAAR,EAA2BK,gBAA3B;AACAN,GAAG,CAACC,GAAJ,CAAQ,mBAAR,EAA6BM,kBAA7B,E,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;eAEeP,G","sourcesContent":["/* eslint-disable import/first */\n/* eslint-disable eol-last */\nimport express from 'express';\nimport logger from 'morgan';\nimport bodyParser from 'body-parser';\n\n// Set up express app\nconst app = express();\nimport meetupRoutes from './routes/meetups';\nimport questionsRoute from './routes/questions';\n\n// Log requests to the console\napp.use(logger('dev'));\n\n\n// Parse incoming request data\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: false,\n}));\n\n\napp.use('/api/v1/meetups', meetupRoutes);\napp.use('/api/v1/questions', questionsRoute);\n\n// API Routes\n// app.use('/api/v1', router);\n\n// app.use((req, res, next) => {\n//   const error = new Error('Not Found');\n//   error.status = 400;\n//   next(error);\n// });\n\n// app.use((error, req, res) => {\n//   res.status(error.status || 500);\n//   res.json({\n//     error: {\n//       message: error.message,\n//     },\n//   });\n// });\n\n// routes(router);\n\nexport default app;"],"file":"app.js"}