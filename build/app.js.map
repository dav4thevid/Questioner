{"version":3,"sources":["../server/app.js"],"names":["app","use","bodyParser","json","urlencoded","extended","AdminRoutes","userRoutes","meetupRoutes","questionsRoute","req","res","next","error","Error","status","expressValidation","ValidationError","message","messages"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;AACA;;AAIA;;AACA;;AACA;;AACA;;AACA;;;;AAbA;;AACA;AAMA;AACA,IAAMA,GAAG,GAAG,uBAAZ;AAMA;AAEA;AACAA,GAAG,CAACC,GAAJ,CAAQ,qBAAO,KAAP,CAAR,E,CAGA;;AACAD,GAAG,CAACC,GAAJ,CAAQC,oBAAWC,IAAX,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,oBAAWE,UAAX,CAAsB;AAC5BC,EAAAA,QAAQ,EAAE;AADkB,CAAtB,CAAR;AAIAL,GAAG,CAACC,GAAJ,CAAQ,eAAR,EAAyBK,cAAzB;AACAN,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBM,aAAnB;AACAP,GAAG,CAACC,GAAJ,CAAQ,iBAAR,EAA2BO,gBAA3B;AACAR,GAAG,CAACC,GAAJ,CAAQ,mBAAR,EAA6BQ,kBAA7B,E,CACA;;AAEAT,GAAG,CAACC,GAAJ,CAAQ,UAACS,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,MAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAU,eAAV,CAAd;AACAD,EAAAA,KAAK,CAACE,MAAN,GAAe,GAAf;AACAH,EAAAA,IAAI,CAACC,KAAD,CAAJ;AACD,CAJD;AAMAb,GAAG,CAACC,GAAJ,CAAQ,UAACY,KAAD,EAAQH,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAA2B;AACjC,MAAIC,KAAK,YAAYG,2BAAkBC,eAAvC,EAAwD;AACtDN,IAAAA,GAAG,CAACI,MAAJ,CAAWF,KAAK,CAACE,MAAjB,EAAyBZ,IAAzB,CAA8BU,KAA9B;AACD,GAFD,MAEO;AACLF,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EACGZ,IADH,CACQ;AACJY,MAAAA,MAAM,EAAEF,KAAK,CAACE,MADV;AAEJG,MAAAA,OAAO,EAAEL,KAAK,CAACM;AAFX,KADR;AAKD;AACF,CAVD;AAYAnB,GAAG,CAACC,GAAJ,CAAQ,UAACY,KAAD,EAAQH,GAAR,EAAaC,GAAb,EAAqB;AAC3BA,EAAAA,GAAG,CAACI,MAAJ,CAAWF,KAAK,CAACE,MAAN,IAAgB,GAA3B;AACAJ,EAAAA,GAAG,CAACR,IAAJ,CAAS;AACPY,IAAAA,MAAM,EAAEF,KAAK,CAACE,MADP;AAEPF,IAAAA,KAAK,EAAEA,KAAK,CAACM;AAFN,GAAT;AAID,CAND;eASenB,G","sourcesContent":["/* eslint-disable import/first */\n/* eslint-disable eol-last */\nimport express from 'express';\nimport '@babel/polyfill';\nimport logger from 'morgan';\nimport bodyParser from 'body-parser';\n\n// Set up express app\nconst app = express();\nimport expressValidation from 'express-validation';\nimport userRoutes from './routes/user';\nimport AdminRoutes from './routes/admin';\nimport meetupRoutes from './routes/meetups';\nimport questionsRoute from './routes/questions';\n// import commentRoutes from './routes/comments';\n\n// Log requests to the console\napp.use(logger('dev'));\n\n\n// Parse incoming request data\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: false,\n}));\n\napp.use('/api/v1/admin', AdminRoutes);\napp.use('/api/v1', userRoutes);\napp.use('/api/v1/meetups', meetupRoutes);\napp.use('/api/v1/questions', questionsRoute);\n// app.use('api/v1/comments', commentRoutes);\n\napp.use((req, res, next) => {\n  const error = new Error('Invalid route');\n  error.status = 404;\n  next(error);\n});\n\napp.use((error, req, res, next) => {\n  if (error instanceof expressValidation.ValidationError) {\n    res.status(error.status).json(error);\n  } else {\n    res.status(500)\n      .json({\n        status: error.status,\n        message: error.messages,\n      });\n  }\n});\n\napp.use((error, req, res) => {\n  res.status(error.status || 500);\n  res.json({\n    status: error.status,\n    error: error.messages,\n  });\n});\n\n\nexport default app;"],"file":"app.js"}