{"version":3,"sources":["../../server/middleware/validatecomment.js"],"names":["CommentValidation","req","res","next","comments","body","commentProperties","questionId","comment","validator","Validator","customErrorMessages","passes","fails","errors","all"],"mappings":";;;;;;;AACA;;AACA;;AAGA;;;;;;;;;;IAGqBA,iB;;;;;;;;;iCACCC,G,EAAKC,G,EAAKC,I,EAAM;AAClC,UAAMC,QAAQ,GAAGH,GAAG,CAACI,IAArB;AAEA,UAAMC,iBAAiB,GAAG;AACxBC,QAAAA,UAAU,EAAE,kBADY;AAExBC,QAAAA,OAAO,EAAE;AAFe,OAA1B;AAKA,UAAMC,SAAS,GAAG,IAAIC,oBAAJ,CAAcN,QAAd,EAAwBE,iBAAxB,EAA2CK,uBAA3C,CAAlB;AACAF,MAAAA,SAAS,CAACG,MAAV,CAAiB;AAAA,eAAMT,IAAI,EAAV;AAAA,OAAjB;AACAM,MAAAA,SAAS,CAACI,KAAV,CAAgB,YAAM;AACpB,YAAMC,MAAM,GAAGL,SAAS,CAACK,MAAV,CAAiBC,GAAjB,EAAf;AACA,eAAO,mCAAcb,GAAd,EAAmB,GAAnB,EAAwBY,MAAxB,CAAP;AACD,OAHD;AAID","sourcesContent":["/* eslint-disable eol-last */\nimport Validator from 'validatorjs';\nimport {\n  errorResponse,\n} from '../utilities/responseformat';\nimport customErrorMessages from '../utilities/errorresponses';\n\n\nexport default class CommentValidation {\n  static validComment(req, res, next) {\n    const comments = req.body;\n\n    const commentProperties = {\n      questionId: 'required|numeric',\n      comment: 'required|string|max:500',\n    };\n\n    const validator = new Validator(comments, commentProperties, customErrorMessages);\n    validator.passes(() => next());\n    validator.fails(() => {\n      const errors = validator.errors.all();\n      return errorResponse(res, 400, errors);\n    });\n  }\n}"],"file":"validatecomment.js"}