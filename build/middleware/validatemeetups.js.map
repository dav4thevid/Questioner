{"version":3,"sources":["../../server/middleware/validatemeetups.js"],"names":["MeetupValidation","req","res","next","meetup","body","meetupProperties","topic","location","happeningOn","images","validator","Validator","customErrorMessages","passes","fails","errors","all","currentDate","Date","now","meetupDate"],"mappings":";;;;;;;AACA;;AACA;;AAGA;;;;;;;;;;IAEqBA,gB;;;;;;;;;sCACMC,G,EAAKC,G,EAAKC,I,EAAM;AACvC,UAAMC,MAAM,GAAGH,GAAG,CAACI,IAAnB;AAEA,UAAMC,gBAAgB,GAAG;AACvBC,QAAAA,KAAK,EAAE,+BADgB;AAEvBC,QAAAA,QAAQ,EAAE,uBAFa;AAGvBC,QAAAA,WAAW,EAAE,CAAC,UAAD,EAAa,MAAb,EAAqB,sDAArB,CAHU;AAIvBC,QAAAA,MAAM,EAAE;AAJe,OAAzB;AAOA,UAAMC,SAAS,GAAG,IAAIC,oBAAJ,CAAcR,MAAd,EAAsBE,gBAAtB,EAAwCO,uBAAxC,CAAlB;AACAF,MAAAA,SAAS,CAACG,MAAV,CAAiB;AAAA,eAAMX,IAAI,EAAV;AAAA,OAAjB;AACAQ,MAAAA,SAAS,CAACI,KAAV,CAAgB,YAAM;AACpB,YAAMC,MAAM,GAAGL,SAAS,CAACK,MAAV,CAAiBC,GAAjB,EAAf;AACA,eAAO,mCAAcf,GAAd,EAAmB,GAAnB,EAAwBc,MAAxB,CAAP;AACD,OAHD;AAID;;;8BAEgBf,G,EAAKC,G,EAAKC,I,EAAM;AAAA,UAE7BM,WAF6B,GAG3BR,GAAG,CAACI,IAHuB,CAE7BI,WAF6B;AAI/B,UAAMS,WAAW,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,CAApB;AACA,UAAMC,UAAU,GAAG,IAAIF,IAAJ,CAASV,WAAT,CAAnB;;AAEA,UAAIS,WAAW,GAAGG,UAAlB,EAA8B;AAC5B,eAAO,mCAAcnB,GAAd,EAAmB,GAAnB,6CAA4DgB,WAA5D,OAAP;AACD;;AACD,aAAOf,IAAI,EAAX;AACD","sourcesContent":["/* eslint-disable eol-last */\nimport Validator from 'validatorjs';\nimport {\n  errorResponse,\n} from '../utilities/responseformat';\nimport customErrorMessages from '../utilities/errorresponses';\n\nexport default class MeetupValidation {\n  static validCreateMeetup(req, res, next) {\n    const meetup = req.body;\n\n    const meetupProperties = {\n      topic: 'required|string|min:1|max:255',\n      location: 'required|string|min:1',\n      happeningOn: ['required', 'date', 'regex:/[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}/'],\n      images: 'url',\n    };\n\n    const validator = new Validator(meetup, meetupProperties, customErrorMessages);\n    validator.passes(() => next());\n    validator.fails(() => {\n      const errors = validator.errors.all();\n      return errorResponse(res, 400, errors);\n    });\n  }\n\n  static checkDate(req, res, next) {\n    const {\n      happeningOn,\n    } = req.body;\n    const currentDate = new Date(Date.now());\n    const meetupDate = new Date(happeningOn);\n\n    if (currentDate > meetupDate) {\n      return errorResponse(res, 400, `Your Date should be greater than ${currentDate}.`);\n    }\n    return next();\n  }\n}"],"file":"validatemeetups.js"}