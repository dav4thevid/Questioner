{"version":3,"sources":["../../server/middleware/validatequestion.js"],"names":["QuestionValidation","req","res","next","question","body","questionProperties","meetupId","title","validator","Validator","customErrorMessages","passes","fails","errors","all"],"mappings":";;;;;;;AACA;;AACA;;AAGA;;;;;;;;;;IAEqBA,kB;;;;;;;;;qCACKC,G,EAAKC,G,EAAKC,I,EAAM;AACtC,UAAMC,QAAQ,GAAGH,GAAG,CAACI,IAArB;AAEA,UAAMC,kBAAkB,GAAG;AACzBC,QAAAA,QAAQ,EAAE,kBADe;AAEzBC,QAAAA,KAAK,EAAE,yBAFkB;AAGzBH,QAAAA,IAAI,EAAE;AAHmB,OAA3B;AAMA,UAAMI,SAAS,GAAG,IAAIC,oBAAJ,CAAcN,QAAd,EAAwBE,kBAAxB,EAA4CK,uBAA5C,CAAlB;AACAF,MAAAA,SAAS,CAACG,MAAV,CAAiB;AAAA,eAAMT,IAAI,EAAV;AAAA,OAAjB;AACAM,MAAAA,SAAS,CAACI,KAAV,CAAgB,YAAM;AACpB,YAAMC,MAAM,GAAGL,SAAS,CAACK,MAAV,CAAiBC,GAAjB,EAAf;AACA,eAAO,mCAAcb,GAAd,EAAmB,GAAnB,EAAwBY,MAAxB,CAAP;AACD,OAHD;AAID","sourcesContent":["/* eslint-disable eol-last */\nimport Validator from 'validatorjs';\nimport {\n  errorResponse,\n} from '../utilities/responseformat';\nimport customErrorMessages from '../utilities/errorresponses';\n\nexport default class QuestionValidation {\n  static validateQuestion(req, res, next) {\n    const question = req.body;\n\n    const questionProperties = {\n      meetupId: 'required|numeric',\n      title: 'required|string|max:200',\n      body: 'required|string|max:500',\n    };\n\n    const validator = new Validator(question, questionProperties, customErrorMessages);\n    validator.passes(() => next());\n    validator.fails(() => {\n      const errors = validator.errors.all();\n      return errorResponse(res, 400, errors);\n    });\n  }\n}"],"file":"validatequestion.js"}