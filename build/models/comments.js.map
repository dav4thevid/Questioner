{"version":3,"sources":["../../server/models/comments.js"],"names":["Comment","userComment","questionId","comment","userId","queryPlaceholder","queryValues","pool","query","rows","id"],"mappings":";;;;;;;AACA;;;;;;;;;;;;;;IAEqBA,O;;;AACnB,mBAAYC,WAAZ,EAAyB;AAAA;;AACvB,SAAKC,UAAL,GAAkBD,WAAW,CAACC,UAA9B;AACA,SAAKC,OAAL,GAAeF,WAAW,CAACE,OAA3B;AACA,SAAKC,MAAL,GAAcH,WAAW,CAACG,MAA1B;AACD;;;;;;;;;;;;;;AAGOC,gBAAAA,gB;AAEAC,gBAAAA,W,GAAc,CAAC,KAAKJ,UAAN,EAAkB,KAAKC,OAAvB,EAAgC,KAAKC,MAArC,C;;uBAGVG,eAAKC,KAAL,CAAWH,gBAAX,EAA6BC,WAA7B,C;;;;AADRG,gBAAAA,I,QAAAA,I;iDAEKA,IAAI,CAAC,CAAD,C;;;;;;;;;;;;;;;;;;;;;gDAGsBC,E;;;;;;;AAC3BL,gBAAAA,gB,GAAmB,8C;AACnBC,gBAAAA,W,GAAc,CAACI,EAAD,C;;uBAGVH,eAAKC,KAAL,CAAWH,gBAAX,EAA6BC,WAA7B,C;;;;AADRG,gBAAAA,I,SAAAA,I;kDAEKA,I","sourcesContent":["/* eslint-disable eol-last */\nimport pool from '../db/index';\n\nexport default class Comment {\n  constructor(userComment) {\n    this.questionId = userComment.questionId;\n    this.comment = userComment.comment;\n    this.userId = userComment.userId;\n  }\n\n  async createComment() {\n    const queryPlaceholder = `INSERT INTO comments (question_id, comment, user_id)\n    VALUES ($1, $2, $3) RETURNING *`;\n    const queryValues = [this.questionId, this.comment, this.userId];\n    const {\n      rows,\n    } = await pool.query(queryPlaceholder, queryValues);\n    return rows[0];\n  }\n\n  static async getCommentsByQuestion(id) {\n    const queryPlaceholder = 'SELECT * FROM comments WHERE questionid = $1';\n    const queryValues = [id];\n    const {\n      rows,\n    } = await pool.query(queryPlaceholder, queryValues);\n    return rows;\n  }\n}"],"file":"comments.js"}