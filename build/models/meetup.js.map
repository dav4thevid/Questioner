{"version":3,"sources":["../../server/models/meetup.js"],"names":["Meetup","meetup","topic","location","happeningOn","image","queryPlaceholder","entryValues","pool","query","rows","id","queryValues","currentDate","result"],"mappings":";;;;;;;AAEA;;;;;;;;;;;;;;IAEMA,M;;;AACJ,kBAAYC,MAAZ,EAAoB;AAAA;;AAClB,SAAKC,KAAL,GAAaD,MAAM,CAACC,KAApB;AACA,SAAKC,QAAL,GAAgBF,MAAM,CAACE,QAAvB;AACA,SAAKC,WAAL,GAAmBH,MAAM,CAACG,WAA1B;AACA,SAAKC,KAAL,GAAaJ,MAAM,CAACI,KAApB;AACD;;;;;;;;;;;;;;AAGOC,gBAAAA,gB;AAEAC,gBAAAA,W,GAAc,CAAC,KAAKL,KAAN,EAAa,KAAKC,QAAlB,EAA4B,KAAKC,WAAjC,EAClB,KAAKC,KADa,C;;uBAKVG,eAAKC,KAAL,CAAWH,gBAAX,EAA6BC,WAA7B,C;;;;AADRG,gBAAAA,I,QAAAA,I;iDAEKA,IAAI,CAAC,CAAD,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAILJ,gBAAAA,gB,GAAmB,uB;;uBAGfE,eAAKC,KAAL,CAAWH,gBAAX,C;;;;AADRI,gBAAAA,I,SAAAA,I;kDAEKA,I;;;;;;;;;;;;;;;;;;;;;gDAGyBC,E;;;;;;;AAC1BL,gBAAAA,gB,GAAmB,qC;AACnBM,gBAAAA,W,GAAc,CAACD,EAAD,C;;uBAGVH,eAAKC,KAAL,CAAWH,gBAAX,EAA6BM,WAA7B,C;;;;AADRF,gBAAAA,I,SAAAA,I;kDAEKA,IAAI,CAAC,CAAD,C;;;;;;;;;;;;;;;;;;;;;gDAGwBG,W;;;;;;;AAC7BP,gBAAAA,gB,GAAmB,qE;AACnBM,gBAAAA,W,GAAc,CAACC,WAAD,C;;uBAGVL,eAAKC,KAAL,CAAWH,gBAAX,EAA6BM,WAA7B,C;;;;AADRF,gBAAAA,I,SAAAA,I;kDAEKA,I;;;;;;;;;;;;;;;;;;;;;gDAGiBC,E;;;;;;AAClBL,gBAAAA,gB,GAAmB,mC;AACnBM,gBAAAA,W,GAAc,CAACD,EAAD,C;;uBACCH,eAAKC,KAAL,CAAWH,gBAAX,EAA6BM,WAA7B,C;;;AAAfE,gBAAAA,M;kDACCA,M;;;;;;;;;;;;;;;;;;;;;eAIId,M","sourcesContent":["/* eslint-disable class-methods-use-this */\n/* eslint-disable eol-last */\nimport pool from '../db/index';\n\nclass Meetup {\n  constructor(meetup) {\n    this.topic = meetup.topic;\n    this.location = meetup.location;\n    this.happeningOn = meetup.happeningOn;\n    this.image = meetup.image;\n  }\n\n  async createMeetup() {\n    const queryPlaceholder = `INSERT INTO meetups (topic, location, happening_on,\n      image) VALUES ($1, $2, $3, $4) RETURNING *`;\n    const entryValues = [this.topic, this.location, this.happeningOn,\n      this.image,\n    ];\n    const {\n      rows,\n    } = await pool.query(queryPlaceholder, entryValues);\n    return rows[0];\n  }\n\n  static async retrieveAllMeetups() {\n    const queryPlaceholder = 'SELECT * FROM meetups';\n    const {\n      rows,\n    } = await pool.query(queryPlaceholder);\n    return rows;\n  }\n\n  static async retrieveSingleMeetup(id) {\n    const queryPlaceholder = 'SELECT * FROM meetups WHERE id = $1';\n    const queryValues = [id];\n    const {\n      rows,\n    } = await pool.query(queryPlaceholder, queryValues);\n    return rows[0];\n  }\n\n  static async retrieveUpcomingMeetups(currentDate) {\n    const queryPlaceholder = 'SELECT * FROM meetups WHERE happening_on > $1 ORDER BY happening_on';\n    const queryValues = [currentDate];\n    const {\n      rows,\n    } = await pool.query(queryPlaceholder, queryValues);\n    return rows;\n  }\n\n  static async deleteMeetup(id) {\n    const queryPlaceholder = 'DELETE FROM meetups WHERE id = $1';\n    const queryValues = [id];\n    const result = await pool.query(queryPlaceholder, queryValues);\n    return result;\n  }\n}\n\nexport default Meetup;"],"file":"meetup.js"}