{"version":3,"sources":["../../server/models/question.js"],"names":["Question","question","meetupid","title","body","userid","queryPlaceholder","queryValues","pool","query","rows","id","questionid","vote","result"],"mappings":";;;;;;;AACA;;;;;;;;;;;;;;IAEMA,Q;;;AACJ,oBAAYC,QAAZ,EAAsB;AAAA;;AACpB,SAAKC,QAAL,GAAgBD,QAAQ,CAACC,QAAzB;AACA,SAAKC,KAAL,GAAaF,QAAQ,CAACE,KAAtB;AACA,SAAKC,IAAL,GAAYH,QAAQ,CAACG,IAArB;AACA,SAAKC,MAAL,GAAcJ,QAAQ,CAACI,MAAvB;AACD;;;;;;;;;;;;;;AAGOC,gBAAAA,gB;AAEAC,gBAAAA,W,GAAc,CAAC,KAAKL,QAAN,EAAgB,KAAKC,KAArB,EAA4B,KAAKC,IAAjC,EAAuC,KAAKC,MAA5C,C;;uBAGVG,eAAKC,KAAL,CAAWH,gBAAX,EAA6BC,WAA7B,C;;;;AADRG,gBAAAA,I,QAAAA,I;iDAEKA,IAAI,CAAC,CAAD,C;;;;;;;;;;;;;;;;;;;;;gDAGgBC,E;;;;;;;AACrBL,gBAAAA,gB,GAAmB,uC;AACnBC,gBAAAA,W,GAAc,CAACI,EAAD,C;;uBAGVH,eAAKC,KAAL,CAAWH,gBAAX,EAA6BC,WAA7B,C;;;;AADRG,gBAAAA,I,SAAAA,I;kDAEKA,IAAI,CAAC,CAAD,C;;;;;;;;;;;;;;;;;;;;;gDAGeC,E;;;;;;;AACpBL,gBAAAA,gB,GAAmB,sE;AACnBC,gBAAAA,W,GAAc,CAACI,EAAD,C;;uBAGVH,eAAKC,KAAL,CAAWH,gBAAX,EAA6BC,WAA7B,C;;;;AADRG,gBAAAA,I,SAAAA,I;kDAEKA,IAAI,CAAC,CAAD,C;;;;;;;;;;;;;;;;;;;;;gDAGiBC,E;;;;;;;AACtBL,gBAAAA,gB,GAAmB,0E;AACnBC,gBAAAA,W,GAAc,CAACI,EAAD,C;;uBAGVH,eAAKC,KAAL,CAAWH,gBAAX,EAA6BC,WAA7B,C;;;;AADRG,gBAAAA,I,SAAAA,I;kDAEKA,IAAI,CAAC,CAAD,C;;;;;;;;;;;;;;;;;;;;;gDAGiBL,M,EAAQO,U,EAAYC,I;;;;;;AAC1CP,gBAAAA,gB;AAEAC,gBAAAA,W,GAAc,CAACF,MAAD,EAASO,UAAT,EAAqBC,IAArB,C;;uBACCL,eAAKC,KAAL,CAAWH,gBAAX,EAA6BC,WAA7B,C;;;AAAfO,gBAAAA,M;kDACCA,M;;;;;;;;;;;;;;;;;;;;;gDAGYT,M,EAAQO,U;;;;;;;AACrBN,gBAAAA,gB,GAAmB,2D;AACnBC,gBAAAA,W,GAAc,CAACF,MAAD,EAASO,UAAT,C;;uBAGVJ,eAAKC,KAAL,CAAWH,gBAAX,EAA6BC,WAA7B,C;;;;AADRG,gBAAAA,I,SAAAA,I;kDAEKA,IAAI,CAAC,CAAD,C;;;;;;;;;;;;;;;;;;;;;eAIAV,Q","sourcesContent":["/* eslint-disable eol-last */\nimport pool from '../db/index';\n\nclass Question {\n  constructor(question) {\n    this.meetupid = question.meetupid;\n    this.title = question.title;\n    this.body = question.body;\n    this.userid = question.userid;\n  }\n\n  async postQuestion() {\n    const queryPlaceholder = `INSERT INTO questions (meetupid, title, body, userid)\n    queryValues ($1, $2, $3, $4) RETURNING *`;\n    const queryValues = [this.meetupid, this.title, this.body, this.userid];\n    const {\n      rows,\n    } = await pool.query(queryPlaceholder, queryValues);\n    return rows[0];\n  }\n\n  static async getQuestionById(id) {\n    const queryPlaceholder = 'SELECT * FROM questions WHERE id = $1';\n    const queryValues = [id];\n    const {\n      rows,\n    } = await pool.query(queryPlaceholder, queryValues);\n    return rows[0];\n  }\n\n  static async upvoteQuestion(id) {\n    const queryPlaceholder = 'UPDATE questions SET upvotes = upvotes + 1 WHERE id = $1 RETURNING *';\n    const queryValues = [id];\n    const {\n      rows,\n    } = await pool.query(queryPlaceholder, queryValues);\n    return rows[0];\n  }\n\n  static async downvoteQuestion(id) {\n    const queryPlaceholder = 'UPDATE questions SET downvotes = downvotes + 1 WHERE id = $1 RETURNING *';\n    const queryValues = [id];\n    const {\n      rows,\n    } = await pool.query(queryPlaceholder, queryValues);\n    return rows[0];\n  }\n\n  static async updateVotesTable(userid, questionid, vote) {\n    const queryPlaceholder = `INSERT INTO votes (userid, questionid, vote) queryValues\n    ($1, $2, $3)`;\n    const queryValues = [userid, questionid, vote];\n    const result = await pool.query(queryPlaceholder, queryValues);\n    return result;\n  }\n\n  static async ifVoted(userid, questionid) {\n    const queryPlaceholder = 'SELECT * FROM votes WHERE userid = $1 AND questionid = $2';\n    const queryValues = [userid, questionid];\n    const {\n      rows,\n    } = await pool.query(queryPlaceholder, queryValues);\n    return rows[0];\n  }\n}\n\nexport default Question;"],"file":"question.js"}