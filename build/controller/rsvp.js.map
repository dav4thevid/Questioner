{"version":3,"sources":["../../server/controller/rsvp.js"],"names":["rsvpController","respondToRsvp","req","res","meetupId","params","id","userId","user","response","body","MeetupModels","retrieveSingleMeetup","checkForMeetup","status","json","error","responseInstance","RsvpModels","responseToMeetup","newResponseData","message","data"],"mappings":";;;;;;;AAEA;;AACA;;;;;;;;AAEA,IAAMA,cAAc,GAAG;AACfC,EAAAA,aADe;AAAA;AAAA;AAAA,6CACDC,GADC,EACIC,GADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAEbC,cAAAA,QAFa,GAEFF,GAAG,CAACG,MAAJ,CAAWC,EAFT;AAGbC,cAAAA,MAHa,GAGJL,GAAG,CAACM,IAAJ,CAASF,EAHL;AAKjBG,cAAAA,QALiB,GAMfP,GAAG,CAACQ,IANW,CAKjBD,QALiB;AAAA;AAAA,qBAQUE,gBAAaC,oBAAb,CAAkCR,QAAlC,CARV;;AAAA;AAQbS,cAAAA,cARa;;AASnB,kBAAI,CAACA,cAAL,EAAqB;AACnBV,gBAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,kBAAAA,MAAM,EAAE,GADW;AAEnBE,kBAAAA,KAAK,EAAE;AAFY,iBAArB;AAID;;AAEKC,cAAAA,gBAhBa,GAgBM,IAAIC,aAAJ,CAAehB,GAAG,CAACQ,IAAnB,CAhBN;AAAA;AAAA,qBAiBWO,gBAAgB,CAACE,gBAAjB,CAAkCf,QAAlC,EAA4CG,MAA5C,CAjBX;;AAAA;AAiBba,cAAAA,eAjBa;;AAkBnB,kBAAIX,QAAQ,KAAK,KAAjB,EAAwB;AACtBN,gBAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,kBAAAA,MAAM,EAAE,GADW;AAEnBO,kBAAAA,OAAO,EAAE,qCAFU;AAGnBC,kBAAAA,IAAI,EAAEF;AAHa,iBAArB;AAKD;;AAxBkB,+CAyBZjB,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,gBAAAA,MAAM,EAAE,GADkB;AAE1BO,gBAAAA,OAAO,EAAE;AAFiB,eAArB,CAzBY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAvB;eAgCerB,c","sourcesContent":["/* eslint-disable radix */\n/* eslint-disable eol-last */\nimport MeetupModels from '../models/meetup';\nimport RsvpModels from '../models/rsvp';\n\nconst rsvpController = {\n  async respondToRsvp(req, res) {\n    const meetupId = req.params.id;\n    const userId = req.user.id;\n    const {\n      response,\n    } = req.body;\n\n    const checkForMeetup = await MeetupModels.retrieveSingleMeetup(meetupId);\n    if (!checkForMeetup) {\n      res.status(404).json({\n        status: 404,\n        error: 'Meetup not found',\n      });\n    }\n\n    const responseInstance = new RsvpModels(req.body);\n    const newResponseData = await responseInstance.responseToMeetup(meetupId, userId);\n    if (response === 'yes') {\n      res.status(200).json({\n        status: 200,\n        message: 'You have registered for this meetup',\n        data: newResponseData,\n      });\n    }\n    return res.status(200).json({\n      status: 200,\n      message: 'Your response has been recorded',\n    });\n  },\n};\n\nexport default rsvpController;"],"file":"rsvp.js"}