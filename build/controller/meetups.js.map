{"version":3,"sources":["../../server/controller/meetups.js"],"names":["MeetupController","createMeetup","req","res","meetupData","MeetupModels","body","createdMeetup","getAllMeetups","retrieveAllMeetups","allMeetups","length","getSingleMeetup","id","params","retrieveSingleMeetup","retrievedMeetup","getUpcomingMeetups","currentDate","Date","now","retrieveUpcomingMeetups","upcomingMeetups","deleteMeetup","meetup"],"mappings":"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","sourcesContent":["/* eslint-disable eol-last */\nimport MeetupModels from '../models/meetup';\nimport {\n  errorResponse,\n  successResponse,\n} from '../utilities/responseformat';\n\n\nconst MeetupController = {\n\n  async createMeetup(req, res) {\n    const meetupData = new MeetupModels(req.body);\n    const createdMeetup = await meetupData.createMeetup();\n    return successResponse(res, 201, 'Meetup created', createdMeetup);\n  },\n\n  async getAllMeetups(req, res) {\n    const allMeetups = await MeetupModels.retrieveAllMeetups();\n\n    if (allMeetups.length === 0) {\n      return errorResponse(res, 204, 'Empty Resource');\n    }\n\n    return successResponse(res, 200, 'All available meetups', allMeetups);\n  },\n\n  async getSingleMeetup(req, res) {\n    const {\n      id,\n    } = req.params;\n    const retrievedMeetup = await MeetupModels.retrieveSingleMeetup(id);\n\n    if (!retrievedMeetup) {\n      return errorResponse(res, 404, 'Meetup not found');\n    }\n\n    return successResponse(res, 200, 'Meetup Found', retrievedMeetup);\n  },\n\n  async getUpcomingMeetups(req, res) {\n    const currentDate = new Date(Date.now());\n\n    const upcomingMeetups = await MeetupModels.retrieveUpcomingMeetups(currentDate);\n\n    if (upcomingMeetups.length === 0) {\n      return errorResponse(res, 404, 'No upcoming meetups');\n    }\n\n    return successResponse(res, 200, 'These are the upcoming meetups', upcomingMeetups);\n  },\n\n\n  async deleteMeetup(req, res) {\n    const {\n      id,\n    } = req.params;\n    const meetup = await MeetupModels.retrieveSingleMeetup(id);\n\n    if (!meetup) return errorResponse(res, 404, 'Meetup not found.');\n    await MeetupModels.deleteMeetup(id);\n    return successResponse(res, 200, 'Meetup deleted successfully.', null);\n  },\n};\n\n\nexport default MeetupController;"],"file":"meetups.js"}