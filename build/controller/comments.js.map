{"version":3,"sources":["../../server/controller/comments.js"],"names":["commentsController","createComment","req","res","newComment","body","Question","getById","questionId","checkquestion","userId","user","id","comment","replace","latestComment","Comments","createdComment"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;;;;;;;AAMA,IAAMA,kBAAkB,GAAG;AAEnBC,EAAAA,aAFmB;AAAA;AAAA;AAAA,6CAELC,GAFK,EAEAC,GAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGjBC,cAAAA,UAHiB,GAGJF,GAAG,CAACG,IAHA;AAAA;AAAA,qBAKKC,kBAASC,OAAT,CAAiBH,UAAU,CAACI,UAA5B,CALL;;AAAA;AAKjBC,cAAAA,aALiB;;AAAA,kBAOlBA,aAPkB;AAAA;AAAA;AAAA;;AAAA,+CAQd,mCAAcN,GAAd,EAAmB,GAAnB,EAAwB,yBAAxB,CARc;;AAAA;AAWvBC,cAAAA,UAAU,CAACM,MAAX,GAAoBR,GAAG,CAACS,IAAJ,CAASC,EAA7B;AACAR,cAAAA,UAAU,CAACS,OAAX,GAAqBT,UAAU,CAACS,OAAX,CAAmBC,OAAnB,CAA2B,aAA3B,EAA0C,EAA1C,CAArB;AAEMC,cAAAA,aAdiB,GAcD,IAAIC,iBAAJ,CAAaZ,UAAb,CAdC;AAAA;AAAA,qBAeMW,aAAa,CAACd,aAAd,EAfN;;AAAA;AAejBgB,cAAAA,cAfiB;AAAA,+CAgBhB,qCAAgBd,GAAhB,EAAqB,GAArB,EAA0B,gBAA1B,EAA4Cc,cAA5C,CAhBgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAA3B;eAoBejB,kB","sourcesContent":["/* eslint-disable eol-last */\n// import Comments from '../models/comments';\nimport Question from '../models/question';\nimport Comments from '../models/comments';\nimport {\n  errorResponse,\n  successResponse,\n} from '../utilities/responseformat';\n\n\nconst commentsController = {\n\n  async createComment(req, res) {\n    const newComment = req.body;\n\n    const checkquestion = await Question.getById(newComment.questionId);\n\n    if (!checkquestion) {\n      return errorResponse(res, 404, 'Question does not exist');\n    }\n\n    newComment.userId = req.user.id;\n    newComment.comment = newComment.comment.replace(/[^A-Z0-9]/ig, '');\n\n    const latestComment = new Comments(newComment);\n    const createdComment = await latestComment.createComment();\n    return successResponse(res, 201, 'Comment posted', createdComment);\n  },\n};\n\nexport default commentsController;"],"file":"comments.js"}