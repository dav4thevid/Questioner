{"version":3,"sources":["../server/server.js"],"names":["dotenv","config","port","process","env","PORT","server","http","createServer","app","listen","console","log"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEAA,gBAAOC,MAAP;;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;;AAEA,IAAMC,MAAM,GAAGC,cAAKC,YAAL,CAAkBC,YAAlB,CAAf;;AAEAH,MAAM,CAACI,MAAP,CAAcR,IAAd,EAAoB,YAAM;AACxB;AACAS,EAAAA,OAAO,CAACC,GAAR,kCAAsCV,IAAtC;AACD,CAHD,E,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["import http from 'http';\nimport dotenv from 'dotenv';\nimport app from './app';\n\ndotenv.config();\n\nconst port = process.env.PORT || 3000;\n\nconst server = http.createServer(app);\n\nserver.listen(port, () => {\n  // eslint-disable-next-line no-console\n  console.log(`Server running on port ${port}`);\n});\n\n\n// /* eslint-disable eol-last */\n// /* eslint-disable no-undef */\n// import http from 'http';\n// import express from 'express';\n// import dotenv from 'dotenv';\n// import logger from 'morgan';\n// import bodyParser from 'body-parser';\n// // import expressValidator from 'express-validator';\n\n// import routes from './routes/routes';\n\n// dotenv.config();\n// // Set up express app\n// const server = express();\n// const router = express.Router();\n\n// // Port configuration\n// const port = process.env.PORT || 8000;\n\n// routes(router);\n\n// // Log requests to the console\n// server.use(logger('dev'));\n\n// // Parse incoming request data\n// server.use(bodyParser.json());\n// server.use(bodyParser.urlencoded({\n//   extended: false,\n// }));\n// // server.use(expressValidator());\n\n// // API Routes\n// server.use('/api/v1', router);\n// app.use((req, res, next) => {\n//   const error = new Error('Not Found');\n//   error.status = 400;\n//   next(error);\n// });\n\n// app.use((error, req, res) => {\n//   res.status(error.status || 500);\n//   res.json({\n//     error: {\n//       message: error.message,\n//     },\n//   });\n// });\n\n// // Create server\n// const app = http.createServer(server);\n\n// app.listen(port, () => {\n//   console.log(`Server running on port ${port}`);\n// });\n\n// export default server;"],"file":"server.js"}